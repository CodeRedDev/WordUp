apply plugin: "maven"
apply plugin: "signing"
apply plugin: "org.jetbrains.dokka"

tasks.named("dokkaJavadoc") {
    outputDirectory = "$buildDir/javadoc"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.source
}

task androidJavadocJar(type: Jar) {
    group = JavaBasePlugin.DOCUMENTATION_GROUP
    description = "Assembles Kotlin docs with Dokka"
    archiveClassifier.set("javadoc")
    from dokkaJavadoc
}

artifacts {
    archives androidSourcesJar, androidJavadocJar
}

ext["signing.keyId"] = ""
ext["signing.password"] = ""
ext["signing.secretKeyRingFile"] = ""
ext["ossrhUsername"] = ""
ext["ossrhPassword"] = ""

File secretPropsFile = project.rootProject.file("local.properties")
if (secretPropsFile.exists()) {
    println "Found secret props file, loading props"
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    println "No props file, loading env vars"
    ext["signing.keyId"] = System.getenv("SIGNING_KEY_ID")
    ext["signing.password"] = System.getenv("SIGNING_PASSWORD")
    ext["signing.secretKeyRingFile"] = System.getenv("SIGNING_SECRET_KEY_RING_FILE")
    ext["ossrhUsername"] = System.getenv("OSSRH_USERNAME")
    ext["ossrhPassword"] = System.getenv("OSSRH_PASSWORD")
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            pom.groupId = PUBLISH_GROUP_ID
            pom.artifactId = PUBLISH_ARTIFACT_ID
            pom.version = PUBLISH_VERSION

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name PUBLISH_ARTIFACT_ID
                packaging "aar"
                description "An Android open source framework for creating soundboard apps."
                url "https://github.com/CodeRedDev/WordUp"
                licenses {
                    license {
                        name "The Unlicense"
                        url "https://unlicense.org/"
                    }
                }
                developers {
                    developer {
                        id "CodeRedDev"
                        name "Michael Martel"
                        email "codered.dev.germany@gmail.com"
                    }
                }
                scm {
                    url "https://github.com/CodeRedDev/WordUp/tree/master"
                    connection "scm:git://github.com/CodeRedDev/WordUp.git"
                    developerConnection "scm:git:ssh://github.com:CodeRedDev/WordUp.git"
                }
            }
        }
    }
}

signing {
    sign configurations.archives
}
